import React, { PropTypes } from 'react';
import './styles.css';

class CookieToaster extends React.Component {
  state = { hidden: true };

  componentDidMount() {
    setTimeout(() => {
      this.setState({ hidden: false });
    }, 3000)
  }

  hide = (accepted) => {
    this.setState({ hidden: true }, () => {
      if (accepted) {
        this.props.accept();
      } else {
        this.props.decline();
      }
    })
  };

  render() {
    return (
      <div>
        {!this.props.popped &&
        <div className={`pop-over-effect ${(this.state.hidden) ? 'hidden' : 'pop-over-show'}`}>
          <div className="cookie-toaster">
            <div className="cookie-container">
              <h1>{this.props.title}</h1>
              <p>{this.props.text}</p>
              <button onClick={() => this.hide(false)}>{this.props.btnDeclineText}</button>
              <button onClick={() => this.hide(true)}>{this.props.btnAcceptText}</button>
            </div>
          </div>
        </div>
        }
      </div>
    );
  }
}

CookieToaster.propTypes = {
  title: PropTypes.string,
  text: PropTypes.string,
  btnDeclineText: PropTypes.string,
  btnAcceptText: PropTypes.string,
  accept: PropTypes.func,
  decline: PropTypes.func,
  popped: PropTypes.bool,
};

CookieToaster.defaultProps = {
  title: 'Give me a property "title" to change this.',
  text: 'Give me a property "text" to change this.',
  btnAcceptText: 'Give me a property "btnAcceptText" to change this.',
  btnDeclineText: 'Give me a property "btnDeclineText" to change this.',
  accept: () => {
  },
  decline: () => {
  },
  popped: false,
};

export default CookieToaster;
